version: '3'

services:

  swagger:
    container_name: swagger-container
    image: swaggerapi/swagger-ui:v4.15.2 # for amd64 architecture only
    # image: pentusha/swagger-ui-crossbuild # workaround for arm64 architecture
    ports:
      - "${SWAGGER_PORT}:8080"
    expose:
      - "${SWAGGER_PORT}"
    environment:
      API_URL: "${PGRST_OPENAPI_SERVER_PROXY_URI}"
    restart: unless-stopped
    depends_on:
      - pgrst

  pgrst:
    container_name: pgrst-container
    image: postgrest/postgrest:v10.1.0
    ports:
      - "${PGRST_PORT}:3000"
    environment:
      PGRST_DB_URI: postgres://${PGRST_USER}:${PGRST_PASSWORD}@pgdb:${POSTGRES_PORT}/${POSTGRES_DB}
      PGRST_OPENAPI_SERVER_PROXY_URI: ${PGRST_OPENAPI_SERVER_PROXY_URI}
      PGRST_DB_SCHEMAS: ${PGRST_DB_SCHEMAS}
      PGRST_DB_ANON_ROLE: ${PGRST_DB_ANON_ROLE}
      # PGRST_JWT_SECRET: ${PGRST_JWT_SECRET}
      # PGRST_DB_PRE_REQUEST: ${PGRST_DB_PRE_REQUEST}
    restart: unless-stopped
    depends_on:
      - pgdb

  pgadmin:
    container_name: pgadmin-container
    image: dpage/pgadmin4:6.16
    ports:
      - "${PDADMIN_PORT}:80"
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_DEFAULT_EMAIL}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_DEFAULT_PW}
    volumes:
      - pgadmin:/var/lib/pgadmin
      - ./rapsql.json:/pgadmin4/servers.json
    restart: unless-stopped
    depends_on:
      - pgdb

  age-viewer:
    build:
      # clone repo https://github.com/apache/age-viewer and change context "/usr/local/docker/age-viewer/" to your own <path>
      context: /usr/local/docker/age-viewer/    # CHANGE THIS
      dockerfile: Dockerfile
    container_name: age-viewer-container
    ports:
      - "3001:3001"
    restart: unless-stopped

  pgdb:
    container_name: pgdb-container
    image: apache/age:v1.1.0
    ports:
      - "${POSTGRES_PORT}:5432"
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
    volumes:
      # - ./pgdbconf/postgres.conf:/etc/postgresql/postgresql.conf
      - ./pgdbconf/schema.sql:/docker-entrypoint-initdb.d/schema.sql
      - pgdata:/var/lib/postgresql/data
      # - ./pgdata:/var/lib/postgresql/data
    # command: postgres -c config_file=/etc/postgresql/postgresql.conf
    restart: unless-stopped

volumes:
  pgadmin: {}
  pgdata: {}